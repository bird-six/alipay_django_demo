"""
Django settings for alipay_demo1 project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-(%4=)ff&a=v6f)ol(kv8(8)+z9d!f*x^bxm9y6e&io9ts9p_k='

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['z72a986e.natappfree.cc', 'localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'demo',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'alipay_demo1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'alipay_demo1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# 支付宝沙箱配置
ALIPAY_SETTINGS = {
    "appid": "9021000155669214",
    "app_return_url": "http://z72a986e.natappfree.cc/pay/success/",    # 同步回调地址
    "app_notify_url": "http://z72a986e.natappfree.cc/alipay/notify/",  # 异步回调地址
    "app_private_key_path": os.path.join(BASE_DIR, "keys/app_private_key.pem"),  # 应用私钥路径
    "alipay_public_key_path": os.path.join(BASE_DIR, "keys/alipay_public_key.pem"),  # 支付宝公钥路径
    "sign_type": "RSA2",  # 签名方式
    "debug": True,  # 沙箱环境为True
}


# 读取密钥内容
from Crypto.PublicKey import RSA
# 1. 读取应用私钥
with open(ALIPAY_SETTINGS['app_private_key_path'], 'r') as f:
    app_private_key_content = f.read()
    private_key = RSA.import_key(app_private_key_content)
    app_private_key = private_key.export_key().decode('utf-8')
    ALIPAY_SETTINGS['app_private_key'] = app_private_key
# 2. 读取支付宝公钥
with open(ALIPAY_SETTINGS['alipay_public_key_path'], 'r') as f:
    alipay_public_key_content = f.read()
    public_key = RSA.import_key(alipay_public_key_content)
    alipay_public_key = public_key.export_key().decode('utf-8')
    ALIPAY_SETTINGS['alipay_public_key'] = alipay_public_key
